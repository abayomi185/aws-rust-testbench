[package]
name = "aws_rust_testbench"
edition = "2021"
version = "0.0.1"
# rust-version = "1.70.0"
authors = ["Yomi <yomi@yomitosh.com>"]
readme = "README.md"

[dependencies]
tokio = { version = "1.29.1", features = ["full"] }
axum = "0.6.19"
axum-server = { version = "0.5", features = ["tls-rustls"] }
tower-http = { version = "0.4", features = [
  "cors",
  "compression-gzip",
  "compression-deflate",
  "trace",
] }
oauth2 = "4.4"
serde = "1.0.178"
serde_json = "1.0.104"
anyhow = "1"
dotenvy = "0.15.7"
# Fixes cross compilation issue
openssl = { version = "0.10", features = ["vendored"] }
# AWS
aws-config = "0.55.3"
aws-sdk-s3 = "0.28.0"
lambda_runtime = "0.8.1"
lambda_http = "0.8.1"
# For Logging
tracing = "0.1.37"
tracing-subscriber = { version = "0.3.17", features = ["env-filter", "json"] }
# Database
bb8 = "0.8.1"
diesel = { version = "2.1.0" }
diesel-async = { version = "0.3.1", features = ["mysql", "bb8"] }

[dev-dependencies]


# [package.metadata.lambda.deploy]
# memory = 128 # Function's memory
# timeout = 60 # Function's execution timeout
# tracing = "active" # Tracing mode
# role = "role-full-arn" # Function's execution role
# env_file = ".env.production" # File to load environment variables from
# env = { "VAR1" = "VAL1" } # Additional environment variables
# layers = [ # List of layers to deploy with your function
#   "layer-full-arn",
# ]
# tags = { "team" = "lambda" } # List of AWS resource tags for this function
